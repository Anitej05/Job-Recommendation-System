{"ast":null,"code":"var _jsxFileName = \"E:\\\\Job-Recommendation-System\\\\frontend\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message\n      })\n    });\n    const data = await response.json();\n    setChatLog([...chatLog, {\n      sender: 'User',\n      text: message\n    }, {\n      sender: 'Bot',\n      text: data.response\n    }]);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat with AI Mentor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chatLog.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [entry.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 26\n        }, this), \" \", entry.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"binKtiGECzMbBJQvJAwnAZBJbAU=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBot","_s","message","setMessage","chatLog","setChatLog","sendMessage","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","sender","text","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","idx","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["E:/Job-Recommendation-System/frontend/src/components/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ChatBot() {\r\n  const [message, setMessage] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch('http://localhost:8000/chat', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ message })\r\n    });\r\n    const data = await response.json();\r\n    setChatLog([...chatLog, { sender: 'User', text: message }, { sender: 'Bot', text: data.response }]);\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chat with AI Mentor</h2>\r\n      <div>\r\n        {chatLog.map((entry, idx) => (\r\n          <div key={idx}><b>{entry.sender}:</b> {entry.text}</div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={sendMessage}>\r\n        <input value={message} onChange={e => setMessage(e.target.value)} placeholder=\"Type your message here\" />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb;MAAQ,CAAC;IAClC,CAAC,CAAC;IACF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCZ,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MAAEc,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEjB;IAAQ,CAAC,EAAE;MAAEgB,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAEH,IAAI,CAACP;IAAS,CAAC,CAAC,CAAC;IACnGN,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEJ,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BzB,OAAA;MAAAqB,QAAA,EACGhB,OAAO,CAACqB,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACtB5B,OAAA;QAAAqB,QAAA,gBAAerB,OAAA;UAAAqB,QAAA,GAAIM,KAAK,CAACR,MAAM,EAAC,GAAC;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,EAACE,KAAK,CAACP,IAAI;MAAA,GAAvCQ,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0C,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA;MAAM6B,QAAQ,EAAEtB,WAAY;MAAAc,QAAA,gBAC1BrB,OAAA;QAAO8B,KAAK,EAAE3B,OAAQ;QAAC4B,QAAQ,EAAEvB,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;QAACG,WAAW,EAAC;MAAwB;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzGzB,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAAAb,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACvB,EAAA,CA9BQD,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAgChB,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}