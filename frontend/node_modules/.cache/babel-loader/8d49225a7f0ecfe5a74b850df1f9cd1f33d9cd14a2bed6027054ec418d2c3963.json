{"ast":null,"code":"var _jsxFileName = \"E:\\\\Job-Recommendation-System\\\\frontend\\\\src\\\\components\\\\CareerTips.js\",\n  _s = $RefreshSig$();\n// CareerTips.js\n\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectors = ['General', 'Technology', 'Finance', 'Healthcare', 'Education', 'Marketing'];\nfunction CareerTips() {\n  _s();\n  const [tips, setTips] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [sector, setSector] = useState('General');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchTips() {\n      setLoading(true);\n      setError(null);\n      try {\n        const url = sector === 'General' ? 'http://localhost:8000/market-trends' : `http://localhost:8000/market-trends?sector=${encodeURIComponent(sector)}`;\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(`Status ${response.status}`);\n        const data = await response.json();\n\n        // Expect a newline‑separated bullet list from backend\n        const content = typeof data.market_trends === 'string' ? data.market_trends.split('\\n').map(line => line.replace(/^[-*]\\s*/, '').trim()).filter(line => line) : [];\n        setTips(content);\n      } catch (err) {\n        console.error(\"Failed to fetch tips:\", err);\n        setError(\"Unable to fetch market trends. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTips();\n  }, [sector]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"career-tips-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Career Tips & Market Trends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '15px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sector-select\",\n        children: \"Select a sector: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sector-select\",\n        value: sector,\n        onChange: e => setSector(e.target.value),\n        style: {\n          padding: '5px'\n        },\n        children: sectors.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: s,\n          children: s\n        }, s, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading trends...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tips-list\",\n      children: tips.map((tip, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: tip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(CareerTips, \"PzXPxyuoUly70kwldKuyYVAm5Xk=\");\n_c = CareerTips;\nexport default CareerTips;\nvar _c;\n$RefreshReg$(_c, \"CareerTips\");","map":{"version":3,"names":["React","useEffect","useState","ReactMarkdown","jsxDEV","_jsxDEV","sectors","CareerTips","_s","tips","setTips","loading","setLoading","sector","setSector","error","setError","fetchTips","url","encodeURIComponent","response","fetch","ok","Error","status","data","json","content","market_trends","split","map","line","replace","trim","filter","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","htmlFor","id","value","onChange","e","target","padding","s","color","tip","idx","_c","$RefreshReg$"],"sources":["E:/Job-Recommendation-System/frontend/src/components/CareerTips.js"],"sourcesContent":["// CareerTips.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst sectors = [\r\n  'General',\r\n  'Technology',\r\n  'Finance',\r\n  'Healthcare',\r\n  'Education',\r\n  'Marketing'\r\n];\r\n\r\nfunction CareerTips() {\r\n  const [tips, setTips] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [sector, setSector] = useState('General');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchTips() {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const url =\r\n          sector === 'General'\r\n            ? 'http://localhost:8000/market-trends'\r\n            : `http://localhost:8000/market-trends?sector=${encodeURIComponent(sector)}`;\r\n\r\n        const response = await fetch(url);\r\n        if (!response.ok) throw new Error(`Status ${response.status}`);\r\n        const data = await response.json();\r\n\r\n        // Expect a newline‑separated bullet list from backend\r\n        const content =\r\n          typeof data.market_trends === 'string'\r\n            ? data.market_trends\r\n                .split('\\n')\r\n                .map(line => line.replace(/^[-*]\\s*/, '').trim())\r\n                .filter(line => line)\r\n            : [];\r\n\r\n        setTips(content);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch tips:\", err);\r\n        setError(\"Unable to fetch market trends. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchTips();\r\n  }, [sector]);\r\n\r\n  return (\r\n    <div className=\"career-tips-container\">\r\n      <h2>Career Tips & Market Trends</h2>\r\n\r\n      <div style={{ margin: '15px 0' }}>\r\n        <label htmlFor=\"sector-select\">Select a sector: </label>\r\n        <select\r\n          id=\"sector-select\"\r\n          value={sector}\r\n          onChange={e => setSector(e.target.value)}\r\n          style={{ padding: '5px' }}\r\n        >\r\n          {sectors.map(s => (\r\n            <option key={s} value={s}>\r\n              {s}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {loading && <p>Loading trends...</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {!loading && !error && (\r\n        <ul className=\"tips-list\">\r\n          {tips.map((tip, idx) => (\r\n            <li key={idx}>\r\n              <ReactMarkdown>{tip}</ReactMarkdown>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CareerTips;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}