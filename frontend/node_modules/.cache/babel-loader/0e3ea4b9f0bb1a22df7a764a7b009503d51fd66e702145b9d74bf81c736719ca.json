{"ast":null,"code":"var _jsxFileName = \"E:\\\\Job-Recommendation-System\\\\frontend\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message\n      })\n    });\n    const data = await response.json();\n    setChatLog([...chatLog, {\n      sender: 'User',\n      text: message\n    }, {\n      sender: 'Bot',\n      text: data.response\n    }]);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat with AI Mentor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: chatLog.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-entry ${entry.sender.toLowerCase()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [entry.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: entry.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 46\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"chat-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"binKtiGECzMbBJQvJAwnAZBJbAU=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","ReactMarkdown","jsxDEV","_jsxDEV","ChatBot","_s","message","setMessage","chatLog","setChatLog","sendMessage","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","sender","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","idx","toLowerCase","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["E:/Job-Recommendation-System/frontend/src/components/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nfunction ChatBot() {\r\n  const [message, setMessage] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch('http://localhost:8000/chat', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ message }),\r\n    });\r\n    const data = await response.json();\r\n    setChatLog([...chatLog, { sender: 'User', text: message }, { sender: 'Bot', text: data.response }]);\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h2>Chat with AI Mentor</h2>\r\n      <div className=\"chat-window\">\r\n        {chatLog.map((entry, idx) => (\r\n          <div key={idx} className={`chat-entry ${entry.sender.toLowerCase()}`}>\r\n            <strong>{entry.sender}:</strong> <ReactMarkdown>{entry.text}</ReactMarkdown>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={sendMessage} className=\"chat-form\">\r\n        <input value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type your message here\" />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}