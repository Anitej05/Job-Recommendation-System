{"ast":null,"code":"var _jsxFileName = \"E:\\\\Job-Recommendation-System\\\\frontend\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport styles from './ChatBot.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatBot() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!message.trim()) return;\n    // Add user immediately\n    setChatLog(prev => [...prev, {\n      sender: 'user',\n      text: message\n    }]);\n\n    // Call your backend\n    const resp = await fetch('http://localhost:8000/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message\n      })\n    });\n    const data = await resp.json();\n\n    // Add bot reply\n    setChatLog(prev => [...prev, {\n      sender: 'bot',\n      text: data.response\n    }]);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat with AI Mentor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.window,\n      children: chatLog.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.entry} ${entry.sender === 'user' ? styles.user : styles.bot}`,\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: entry.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message here\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !message.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"binKtiGECzMbBJQvJAwnAZBJbAU=\");\n_c = ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","ReactMarkdown","styles","jsxDEV","_jsxDEV","ChatBot","_s","message","setMessage","chatLog","setChatLog","sendMessage","e","preventDefault","trim","prev","sender","text","resp","fetch","method","headers","body","JSON","stringify","data","json","response","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","window","map","entry","i","user","bot","onSubmit","form","value","onChange","target","placeholder","type","disabled","_c","$RefreshReg$"],"sources":["E:/Job-Recommendation-System/frontend/src/components/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport styles from './ChatBot.module.css';\r\n\r\nexport default function ChatBot() {\r\n  const [message, setMessage] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!message.trim()) return;\r\n    // Add user immediately\r\n    setChatLog((prev) => [\r\n      ...prev,\r\n      { sender: 'user', text: message }\r\n    ]);\r\n\r\n    // Call your backend\r\n    const resp = await fetch('http://localhost:8000/chat', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ message }),\r\n    });\r\n    const data = await resp.json();\r\n\r\n    // Add bot reply\r\n    setChatLog((prev) => [\r\n      ...prev,\r\n      { sender: 'bot', text: data.response }\r\n    ]);\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2>Chat with AI Mentor</h2>\r\n      <div className={styles.window}>\r\n        {chatLog.map((entry, i) => (\r\n          <div\r\n            key={i}\r\n            className={`${styles.entry} ${\r\n              entry.sender === 'user' ? styles.user : styles.bot\r\n            }`}\r\n          >\r\n            <ReactMarkdown>{entry.text}</ReactMarkdown>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={sendMessage} className={styles.form}>\r\n        <input\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Type your message hereâ€¦\"\r\n        />\r\n        <button type=\"submit\" disabled={!message.trim()}>\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}