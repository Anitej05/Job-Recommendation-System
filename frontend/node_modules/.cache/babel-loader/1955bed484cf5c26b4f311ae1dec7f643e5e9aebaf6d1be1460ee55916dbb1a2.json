{"ast":null,"code":"var _jsxFileName = \"E:\\\\Job-Recommendation-System\\\\frontend\\\\src\\\\components\\\\CareerTips.js\",\n  _s = $RefreshSig$();\n// src/components/CareerTips.js\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectors = ['General', 'Technology', 'Finance', 'Healthcare', 'Education', 'Marketing'];\nfunction CareerTips() {\n  _s();\n  const [tips, setTips] = useState([]); // [{ title, description }]\n  const [loading, setLoading] = useState(false);\n  const [sector, setSector] = useState('General');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchTips() {\n      setLoading(true);\n      setError(null);\n      try {\n        const base = 'http://localhost:8000/market-trends';\n        const url = sector === 'General' ? base : `${base}?sector=${encodeURIComponent(sector)}`;\n        const res = await fetch(url);\n        if (!res.ok) throw new Error(`Status ${res.status}`);\n        const {\n          market_trends\n        } = await res.json();\n        if (Array.isArray(market_trends)) {\n          // Assuming each item in market_trends has 'title' and 'description'\n          setTips(market_trends);\n        } else {\n          // Handle the case where market_trends is not an array or is empty\n          // The backend might return an object like { market_trends: [] } or { message: \"No trends found\" }\n          // If it's not an array, treat it as no data\n          if (market_trends && typeof market_trends === 'object' && Array.isArray(market_trends.market_trends)) {\n            setTips(market_trends.market_trends); // Handle potential nested structure\n          } else {\n            setTips([]); // Ensure it's always an array for mapping\n            console.warn(\"Backend response for market trends is not a valid array:\", market_trends);\n            // Optionally set a specific \"No tips found\" message here if needed\n          }\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch tips:\", err);\n        setError(\"Unable to fetch market trends. Please try again later.\");\n        setTips([]); // Clear any old tips on error\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTips();\n  }, [sector]); // Dependency array: re-run effect when sector changes\n\n  // Optional: Add a message when no tips are found\n  const noTipsMessage = !loading && !error && tips.length === 0 && \"No career tips available for the selected sector.\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"career-tips-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Career Tips & Market Trends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sector-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sector-select\",\n        children: \"Select a sector:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sector-select\",\n        value: sector,\n        onChange: e => setSector(e.target.value),\n        className: \"sector-select\" // Add class here\n        ,\n        children: sectors.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: s,\n          children: s\n        }, s, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Loading tips...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }, this), \" \", noTipsMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-results-message\",\n      children: noTipsMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }, this), \" \", !loading && !error && tips.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-grid\",\n      children: [\" \", tips.map((tip, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-card\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: tip.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"job-card-description\",\n            children: tip.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(CareerTips, \"PzXPxyuoUly70kwldKuyYVAm5Xk=\");\n_c = CareerTips;\nexport default CareerTips;\nvar _c;\n$RefreshReg$(_c, \"CareerTips\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","sectors","CareerTips","_s","tips","setTips","loading","setLoading","sector","setSector","error","setError","fetchTips","base","url","encodeURIComponent","res","fetch","ok","Error","status","market_trends","json","Array","isArray","console","warn","err","noTipsMessage","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","s","tip","idx","title","description","_c","$RefreshReg$"],"sources":["E:/Job-Recommendation-System/frontend/src/components/CareerTips.js"],"sourcesContent":["// src/components/CareerTips.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst sectors = [\r\n  'General',\r\n  'Technology',\r\n  'Finance',\r\n  'Healthcare',\r\n  'Education',\r\n  'Marketing'\r\n];\r\n\r\nfunction CareerTips() {\r\n  const [tips, setTips]       = useState([]);   // [{ title, description }]\r\n  const [loading, setLoading] = useState(false);\r\n  const [sector, setSector]   = useState('General');\r\n  const [error, setError]     = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchTips() {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const base = 'http://localhost:8000/market-trends';\r\n        const url  = sector === 'General'\r\n          ? base\r\n          : `${base}?sector=${encodeURIComponent(sector)}`;\r\n\r\n        const res = await fetch(url);\r\n        if (!res.ok) throw new Error(`Status ${res.status}`);\r\n        const { market_trends } = await res.json();\r\n\r\n        if (Array.isArray(market_trends)) {\r\n          // Assuming each item in market_trends has 'title' and 'description'\r\n          setTips(market_trends);\r\n        } else {\r\n          // Handle the case where market_trends is not an array or is empty\r\n          // The backend might return an object like { market_trends: [] } or { message: \"No trends found\" }\r\n          // If it's not an array, treat it as no data\r\n          if (market_trends && typeof market_trends === 'object' && Array.isArray(market_trends.market_trends)) {\r\n             setTips(market_trends.market_trends); // Handle potential nested structure\r\n          } else {\r\n             setTips([]); // Ensure it's always an array for mapping\r\n             console.warn(\"Backend response for market trends is not a valid array:\", market_trends);\r\n             // Optionally set a specific \"No tips found\" message here if needed\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch tips:\", err);\r\n        setError(\"Unable to fetch market trends. Please try again later.\");\r\n        setTips([]); // Clear any old tips on error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchTips();\r\n  }, [sector]); // Dependency array: re-run effect when sector changes\r\n\r\n  // Optional: Add a message when no tips are found\r\n  const noTipsMessage = !loading && !error && tips.length === 0 && \"No career tips available for the selected sector.\";\r\n\r\n\r\n  return (\r\n    <div className=\"career-tips-container\">\r\n      <h2>Career Tips & Market Trends</h2>\r\n\r\n      {/* Use a div with a class for styling the selector */}\r\n      <div className=\"sector-selector\">\r\n        <label htmlFor=\"sector-select\">Select a sector:</label>\r\n        {/* Use a class for styling the select element */}\r\n        <select\r\n          id=\"sector-select\"\r\n          value={sector}\r\n          onChange={e => setSector(e.target.value)}\r\n          className=\"sector-select\" // Add class here\r\n        >\r\n          {sectors.map(s => (\r\n            <option key={s} value={s}>{s}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {loading && <p className=\"loading-message\">Loading tips...</p>}\r\n      {error   && <p className=\"error-message\">{error}</p>} {/* Use error-message class */}\r\n      {noTipsMessage && <p className=\"no-results-message\">{noTipsMessage}</p>} {/* Use no-results class */}\r\n\r\n\r\n      {!loading && !error && tips.length > 0 && (\r\n        <div className=\"jobs-grid\"> {/* Reuse jobs-grid class for layout */}\r\n          {tips.map((tip, idx) => (\r\n            <div className=\"job-card\" key={idx}> {/* Reuse job-card class for card styling */}\r\n              {/* Wrap content in job-card-content to apply padding etc. */}\r\n              <div className=\"job-card-content\">\r\n                 <h3>{tip.title}</h3>\r\n                 {/* Reuse job-card-description class for consistent text style */}\r\n                 <p className=\"job-card-description\">{tip.description}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CareerTips;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}