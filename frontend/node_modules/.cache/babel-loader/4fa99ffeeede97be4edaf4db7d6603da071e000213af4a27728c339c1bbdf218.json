{"ast":null,"code":"var _jsxFileName = \"E:\\\\Job-Recommendation-System\\\\frontend\\\\src\\\\components\\\\Recommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recommendations() {\n  _s();\n  const [preferences, setPreferences] = useState('');\n  const [skills, setSkills] = useState('');\n  const [recommendations, setRecommendations] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/recommendations', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        preferences,\n        skills\n      })\n    });\n    const data = await response.json();\n    setRecommendations(data.recommendations);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendations-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Preferences:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: preferences,\n        onChange: e => setPreferences(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Skills:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: skills,\n        onChange: e => setSkills(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"recommendations-list\",\n      children: recommendations.map((job, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: job\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Recommendations, \"cGW5ByAPZpuQvhhok1H83yAKUlQ=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","ReactMarkdown","jsxDEV","_jsxDEV","Recommendations","_s","preferences","setPreferences","skills","setSkills","recommendations","setRecommendations","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","type","map","job","index","_c","$RefreshReg$"],"sources":["E:/Job-Recommendation-System/frontend/src/components/Recommendations.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nfunction Recommendations() {\r\n  const [preferences, setPreferences] = useState('');\r\n  const [skills, setSkills] = useState('');\r\n  const [recommendations, setRecommendations] = useState([]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch('http://localhost:8000/recommendations', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ preferences, skills }),\r\n    });\r\n    const data = await response.json();\r\n    setRecommendations(data.recommendations);\r\n  };\r\n\r\n  return (\r\n    <div className=\"recommendations-container\">\r\n      <h2>Job Recommendations</h2>\r\n      <form onSubmit={handleSubmit} className=\"form-container\">\r\n        <label>Preferences:</label>\r\n        <input value={preferences} onChange={(e) => setPreferences(e.target.value)} />\r\n        <label>Skills:</label>\r\n        <input value={skills} onChange={(e) => setSkills(e.target.value)} />\r\n        <button type=\"submit\">Get Recommendations</button>\r\n      </form>\r\n      <ul className=\"recommendations-list\">\r\n        {recommendations.map((job, index) => (\r\n          <li key={index}>\r\n            <ReactMarkdown>{job}</ReactMarkdown>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recommendations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}