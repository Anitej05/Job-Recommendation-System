{"ast":null,"code":"var _jsxFileName = \"E:\\\\Job-Recommendation-System\\\\frontend\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\n// src/components/ChatBot.js\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\n// remove the module‑css import!\n// import styles from './ChatBot.module.css';\n\n// instead import your global stylesheet once:\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatBot() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!message.trim()) return;\n\n    // add user message immediately\n    setChatLog(prev => [...prev, {\n      sender: 'user',\n      text: message\n    }]);\n\n    // call your API\n    const resp = await fetch('http://localhost:8000/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message\n      })\n    });\n    const data = await resp.json();\n\n    // add bot response\n    setChatLog(prev => [...prev, {\n      sender: 'bot',\n      text: data.response\n    }]);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat with AI Mentor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: chatLog.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-entry ${entry.sender === 'user' ? 'user' : 'bot'}`,\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: entry.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"chat-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message here\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !message.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"binKtiGECzMbBJQvJAwnAZBJbAU=\");\n_c = ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","ReactMarkdown","jsxDEV","_jsxDEV","ChatBot","_s","message","setMessage","chatLog","setChatLog","sendMessage","e","preventDefault","trim","prev","sender","text","resp","fetch","method","headers","body","JSON","stringify","data","json","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","i","onSubmit","value","onChange","target","placeholder","type","disabled","_c","$RefreshReg$"],"sources":["E:/Job-Recommendation-System/frontend/src/components/ChatBot.js"],"sourcesContent":["// src/components/ChatBot.js\r\nimport React, { useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n// remove the module‑css import!\r\n// import styles from './ChatBot.module.css';\r\n\r\n// instead import your global stylesheet once:\r\nimport '../styles/styles.css';\r\n\r\nexport default function ChatBot() {\r\n  const [message, setMessage] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!message.trim()) return;\r\n\r\n    // add user message immediately\r\n    setChatLog((prev) => [...prev, { sender: 'user', text: message }]);\r\n\r\n    // call your API\r\n    const resp = await fetch('http://localhost:8000/chat', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ message }),\r\n    });\r\n    const data = await resp.json();\r\n\r\n    // add bot response\r\n    setChatLog((prev) => [...prev, { sender: 'bot', text: data.response }]);\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h2>Chat with AI Mentor</h2>\r\n\r\n      <div className=\"chat-window\">\r\n        {chatLog.map((entry, i) => (\r\n          <div\r\n            key={i}\r\n            className={`chat-entry ${entry.sender === 'user' ? 'user' : 'bot'}`}\r\n          >\r\n            <ReactMarkdown>{entry.text}</ReactMarkdown>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <form onSubmit={sendMessage} className=\"chat-form\">\r\n        <input\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Type your message here…\"\r\n        />\r\n        <button type=\"submit\" disabled={!message.trim()}>\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}