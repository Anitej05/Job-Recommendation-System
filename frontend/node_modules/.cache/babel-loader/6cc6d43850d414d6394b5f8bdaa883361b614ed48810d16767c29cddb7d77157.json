{"ast":null,"code":"var _jsxFileName = \"E:\\\\Job-Recommendation-System\\\\frontend\\\\src\\\\components\\\\Recommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Added useEffect for potential future use\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recommendations() {\n  _s();\n  const [preferences, setPreferences] = useState('');\n  const [skills, setSkills] = useState('');\n  const [detailedExpectations, setDetailedExpectations] = useState(''); // New state\n  const [jobResults, setJobResults] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [submittedQuery, setSubmittedQuery] = useState(false); // To show \"no results\" only after a submission\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setJobResults([]);\n    setLoading(true);\n    setSubmittedQuery(true); // Mark that a query has been submitted\n\n    const payload = {\n      preferences,\n      skills,\n      detailed_expectations: detailedExpectations // Send new field\n    };\n    try {\n      // const response = await fetch('http://localhost:8000/recommendations', {\n      // Use environment variable for API URL if available, otherwise fallback\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n      const response = await fetch(`${apiUrl}/recommendations`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        let errorData;\n        try {\n          errorData = await response.json();\n        } catch (parseError) {\n          // If response is not JSON, use status text or generic message\n          throw new Error(response.statusText || `Request failed with status ${response.status}`);\n        }\n        throw new Error(errorData.detail || `API Error: Status ${response.status}`);\n      }\n      const data = await response.json();\n      // Ensure data.recommendations is an array, even if API returns null or undefined\n      setJobResults(Array.isArray(data.recommendations) ? data.recommendations : []);\n    } catch (err) {\n      console.error(\"Fetch error:\", err);\n      setError(err.message || 'Failed to fetch recommendations. Please check the console and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const truncateText = (text, maxLength) => {\n    if (!text || typeof text !== 'string') return 'No description provided.';\n    return text.length > maxLength ? text.slice(0, maxLength) + '…' : text;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendations-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page-subtitle\",\n      children: \"Tell us your preferences, skills, and detailed expectations to find jobs tailored to you. The more details you provide, the better the match!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"preferences-input\",\n          children: \"General Preferences:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"preferences-input\",\n          type: \"text\",\n          value: preferences,\n          onChange: e => setPreferences(e.target.value),\n          placeholder: \"E.g., Remote, Full-time, San Francisco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"skills-input\",\n          children: \"Your Key Skills:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"skills-input\",\n          type: \"text\",\n          value: skills,\n          onChange: e => setSkills(e.target.value),\n          placeholder: \"E.g., React, Node.js, Python, Project Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"detailed-expectations-input\",\n          children: \"Detailed Expectations (Optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"detailed-expectations-input\",\n          value: detailedExpectations,\n          onChange: e => setDetailedExpectations(e.target.value),\n          placeholder: \"Describe your ideal role: e.g., desired salary, work environment (collaborative, fast-paced), company culture (innovative, mission-driven), career growth opportunities, deal-breakers...\",\n          rows: \"5\" // Increased rows for more space\n          ,\n          className: \"detailed-expectations-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"The more you tell us, the better we can match you to your dream job!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"btn-primary\",\n        children: loading ? 'Searching for Jobs…' : 'Get Personalized Recommendations'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Fetching personalized recommendations based on your input...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }, this), !loading && submittedQuery && jobResults.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-results-message\",\n      children: \"No recommendations found matching your criteria. Try adjusting your preferences, skills, or detailed expectations.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), jobResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-grid\",\n      children: jobResults.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-card\",\n        children: [\" \", job.logo &&\n        /*#__PURE__*/\n        // Assuming logo might be added later by LLM or other means\n        _jsxDEV(\"div\", {\n          className: \"job-card-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: job.logo,\n            alt: `${job.company || 'Company'} logo`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: job.title || 'Untitled Position'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"job-company\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Company:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this), \" \", job.company || 'Unknown Company']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), job.relevance_notes && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-relevance-notes\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Why it might be a fit:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 24\n              }, this), \" \", job.relevance_notes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-card-description\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: truncateText(job.short_description, 180)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), job.skills && Array.isArray(job.skills) && job.skills.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-skills\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Key Skills Mentioned: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this), job.skills.map((skill, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"skill-badge\",\n              children: skill\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this), job.url && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: job.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"job-link\",\n            children: \"View Full Posting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)]\n      }, job.url || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Recommendations, \"syXTVWE6GAQeYLeHLAMGYFVZ38o=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Recommendations","_s","preferences","setPreferences","skills","setSkills","detailedExpectations","setDetailedExpectations","jobResults","setJobResults","error","setError","loading","setLoading","submittedQuery","setSubmittedQuery","handleSubmit","e","preventDefault","payload","detailed_expectations","apiUrl","process","env","REACT_APP_API_URL","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","parseError","Error","statusText","status","detail","data","Array","isArray","recommendations","err","console","message","truncateText","text","maxLength","length","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","placeholder","rows","disabled","map","job","index","logo","src","alt","company","title","relevance_notes","short_description","skill","idx","url","href","rel","_c","$RefreshReg$"],"sources":["E:/Job-Recommendation-System/frontend/src/components/Recommendations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Added useEffect for potential future use\r\n\r\nfunction Recommendations() {\r\n  const [preferences, setPreferences] = useState('');\r\n  const [skills, setSkills] = useState('');\r\n  const [detailedExpectations, setDetailedExpectations] = useState(''); // New state\r\n  const [jobResults, setJobResults] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [submittedQuery, setSubmittedQuery] = useState(false); // To show \"no results\" only after a submission\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setJobResults([]);\r\n    setLoading(true);\r\n    setSubmittedQuery(true); // Mark that a query has been submitted\r\n\r\n    const payload = {\r\n      preferences,\r\n      skills,\r\n      detailed_expectations: detailedExpectations, // Send new field\r\n    };\r\n\r\n    try {\r\n      // const response = await fetch('http://localhost:8000/recommendations', {\r\n      // Use environment variable for API URL if available, otherwise fallback\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n      const response = await fetch(`${apiUrl}/recommendations`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        let errorData;\r\n        try {\r\n          errorData = await response.json();\r\n        } catch (parseError) {\r\n          // If response is not JSON, use status text or generic message\r\n          throw new Error(response.statusText || `Request failed with status ${response.status}`);\r\n        }\r\n        throw new Error(errorData.detail || `API Error: Status ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      // Ensure data.recommendations is an array, even if API returns null or undefined\r\n      setJobResults(Array.isArray(data.recommendations) ? data.recommendations : []);\r\n    } catch (err) {\r\n      console.error(\"Fetch error:\", err);\r\n      setError(err.message || 'Failed to fetch recommendations. Please check the console and try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const truncateText = (text, maxLength) => {\r\n    if (!text || typeof text !== 'string') return 'No description provided.';\r\n    return text.length > maxLength ? text.slice(0, maxLength) + '…' : text;\r\n  };\r\n\r\n  return (\r\n    <div className=\"recommendations-container\">\r\n      <h2>Job Recommendations</h2>\r\n      <p className=\"page-subtitle\">\r\n        Tell us your preferences, skills, and detailed expectations to find jobs tailored to you.\r\n        The more details you provide, the better the match!\r\n      </p>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <form onSubmit={handleSubmit} className=\"form-container\">\r\n        <div>\r\n          <label htmlFor=\"preferences-input\">General Preferences:</label>\r\n          <input\r\n            id=\"preferences-input\"\r\n            type=\"text\"\r\n            value={preferences}\r\n            onChange={(e) => setPreferences(e.target.value)}\r\n            placeholder=\"E.g., Remote, Full-time, San Francisco\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"skills-input\">Your Key Skills:</label>\r\n          <input\r\n            id=\"skills-input\"\r\n            type=\"text\"\r\n            value={skills}\r\n            onChange={(e) => setSkills(e.target.value)}\r\n            placeholder=\"E.g., React, Node.js, Python, Project Management\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"detailed-expectations-input\">Detailed Expectations (Optional):</label>\r\n          <textarea\r\n            id=\"detailed-expectations-input\"\r\n            value={detailedExpectations}\r\n            onChange={(e) => setDetailedExpectations(e.target.value)}\r\n            placeholder=\"Describe your ideal role: e.g., desired salary, work environment (collaborative, fast-paced), company culture (innovative, mission-driven), career growth opportunities, deal-breakers...\"\r\n            rows=\"5\" // Increased rows for more space\r\n            className=\"detailed-expectations-textarea\"\r\n          />\r\n           <small>The more you tell us, the better we can match you to your dream job!</small>\r\n        </div>\r\n\r\n\r\n        <button type=\"submit\" disabled={loading} className=\"btn-primary\">\r\n          {loading ? 'Searching for Jobs…' : 'Get Personalized Recommendations'}\r\n        </button>\r\n      </form>\r\n\r\n      {loading && <p className=\"loading-message\">Fetching personalized recommendations based on your input...</p>}\r\n\r\n      {!loading && submittedQuery && jobResults.length === 0 && !error && (\r\n        <p className=\"no-results-message\">\r\n          No recommendations found matching your criteria. Try adjusting your preferences, skills, or detailed expectations.\r\n        </p>\r\n      )}\r\n\r\n      {jobResults.length > 0 && (\r\n        <div className=\"jobs-grid\">\r\n          {jobResults.map((job, index) => (\r\n            <div key={job.url || index} className=\"job-card\"> {/* Use job.url as key if available and unique */}\r\n              {job.logo && ( // Assuming logo might be added later by LLM or other means\r\n                <div className=\"job-card-logo\">\r\n                  <img src={job.logo} alt={`${job.company || 'Company'} logo`} />\r\n                </div>\r\n              )}\r\n              <div className=\"job-card-content\">\r\n                <h3>{job.title || 'Untitled Position'}</h3>\r\n                <p className=\"job-company\">\r\n                  <strong>Company:</strong> {job.company || 'Unknown Company'}\r\n                </p>\r\n                {/* Location is not explicitly returned, but could be in title/desc */}\r\n                {/* <p className=\"job-location\"><strong>Location:</strong> {job.location || 'Not specified'}</p> */}\r\n\r\n                {job.relevance_notes && (\r\n                  <div className=\"job-relevance-notes\">\r\n                    <p><strong>Why it might be a fit:</strong> {job.relevance_notes}</p>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"job-card-description\">\r\n                  <p>{truncateText(job.short_description, 180)}</p>\r\n                </div>\r\n\r\n                {job.skills && Array.isArray(job.skills) && job.skills.length > 0 && (\r\n                  <div className=\"job-skills\">\r\n                    <strong>Key Skills Mentioned: </strong>\r\n                    {job.skills.map((skill, idx) => (\r\n                      <span key={idx} className=\"skill-badge\">{skill}</span>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n                {job.url && (\r\n                  <a href={job.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"job-link\">\r\n                    View Full Posting\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recommendations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}