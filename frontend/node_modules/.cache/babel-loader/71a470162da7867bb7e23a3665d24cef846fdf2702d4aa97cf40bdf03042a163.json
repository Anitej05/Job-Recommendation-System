{"ast":null,"code":"var _jsxFileName = \"E:\\\\Job-Recommendation-System\\\\frontend\\\\src\\\\components\\\\CareerTips.js\",\n  _s = $RefreshSig$();\n// src/components/CareerTips.js\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectors = ['General', 'Technology', 'Finance', 'Healthcare', 'Education', 'Marketing'];\nfunction CareerTips() {\n  _s();\n  const [tips, setTips] = useState([]); // Will always be [{ title, description }]\n  const [loading, setLoading] = useState(false);\n  const [sector, setSector] = useState('General');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchTips() {\n      setLoading(true);\n      setError(null);\n      try {\n        const base = 'http://localhost:8000/market-trends';\n        const url = sector === 'General' ? base : `${base}?sector=${encodeURIComponent(sector)}`;\n        const res = await fetch(url);\n        if (!res.ok) throw new Error(`Status ${res.status}`);\n        const data = await res.json();\n        let raw = data.market_trends;\n\n        // 1) Already an array of objects?\n        if (Array.isArray(raw) && raw.length > 0 && typeof raw[0] === 'object') {\n          setTips(raw);\n\n          // 2) Array of strings?\n        } else if (Array.isArray(raw) && raw.length > 0 && typeof raw[0] === 'string') {\n          setTips(raw.map(str => ({\n            title: str.trim(),\n            description: ''\n          })));\n\n          // 3) Single string with newline bullets?\n        } else if (typeof raw === 'string') {\n          const lines = raw.split('\\n').map(l => l.replace(/^[-*]\\s*/, '').trim()).filter(l => l);\n\n          // Try to split each line at first “:”\n          const parsed = lines.map(line => {\n            const [head, ...rest] = line.split(':');\n            if (rest.length) {\n              return {\n                title: head.trim(),\n                description: rest.join(':').trim()\n              };\n            } else {\n              return {\n                title: line,\n                description: ''\n              };\n            }\n          });\n          setTips(parsed);\n        } else {\n          throw new Error('Unexpected format');\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch tips:\", err);\n        setError(\"Unable to fetch market trends. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTips();\n  }, [sector]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"career-tips-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Career Tips & Market Trends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '15px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sector-select\",\n        children: \"Select a sector: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sector-select\",\n        value: sector,\n        onChange: e => setSector(e.target.value),\n        style: {\n          padding: '5px'\n        },\n        children: sectors.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: s,\n          children: s\n        }, s, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tips...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tips-list\",\n      children: tips.map((tip, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: tip.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), tip.description && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\": \", tip.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(CareerTips, \"PzXPxyuoUly70kwldKuyYVAm5Xk=\");\n_c = CareerTips;\nexport default CareerTips;\nvar _c;\n$RefreshReg$(_c, \"CareerTips\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","sectors","CareerTips","_s","tips","setTips","loading","setLoading","sector","setSector","error","setError","fetchTips","base","url","encodeURIComponent","res","fetch","ok","Error","status","data","json","raw","market_trends","Array","isArray","length","map","str","title","trim","description","lines","split","l","replace","filter","parsed","line","head","rest","join","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","htmlFor","id","value","onChange","e","target","padding","s","color","tip","idx","_c","$RefreshReg$"],"sources":["E:/Job-Recommendation-System/frontend/src/components/CareerTips.js"],"sourcesContent":["// src/components/CareerTips.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst sectors = [\r\n  'General',\r\n  'Technology',\r\n  'Finance',\r\n  'Healthcare',\r\n  'Education',\r\n  'Marketing'\r\n];\r\n\r\nfunction CareerTips() {\r\n  const [tips, setTips]     = useState([]);   // Will always be [{ title, description }]\r\n  const [loading, setLoading] = useState(false);\r\n  const [sector, setSector]   = useState('General');\r\n  const [error, setError]     = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchTips() {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const base = 'http://localhost:8000/market-trends';\r\n        const url  = sector === 'General'\r\n          ? base\r\n          : `${base}?sector=${encodeURIComponent(sector)}`;\r\n\r\n        const res = await fetch(url);\r\n        if (!res.ok) throw new Error(`Status ${res.status}`);\r\n        const data = await res.json();\r\n\r\n        let raw = data.market_trends;\r\n\r\n        // 1) Already an array of objects?\r\n        if (Array.isArray(raw) && raw.length > 0 && typeof raw[0] === 'object') {\r\n          setTips(raw);\r\n\r\n        // 2) Array of strings?\r\n        } else if (Array.isArray(raw) && raw.length > 0 && typeof raw[0] === 'string') {\r\n          setTips(\r\n            raw.map(str => ({ title: str.trim(), description: '' }))\r\n          );\r\n\r\n        // 3) Single string with newline bullets?\r\n        } else if (typeof raw === 'string') {\r\n          const lines = raw\r\n            .split('\\n')\r\n            .map(l => l.replace(/^[-*]\\s*/, '').trim())\r\n            .filter(l => l);\r\n\r\n          // Try to split each line at first “:”\r\n          const parsed = lines.map(line => {\r\n            const [head, ...rest] = line.split(':');\r\n            if (rest.length) {\r\n              return {\r\n                title: head.trim(),\r\n                description: rest.join(':').trim()\r\n              };\r\n            } else {\r\n              return { title: line, description: '' };\r\n            }\r\n          });\r\n          setTips(parsed);\r\n\r\n        } else {\r\n          throw new Error('Unexpected format');\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch tips:\", err);\r\n        setError(\"Unable to fetch market trends. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchTips();\r\n  }, [sector]);\r\n\r\n  return (\r\n    <div className=\"career-tips-container\">\r\n      <h2>Career Tips & Market Trends</h2>\r\n\r\n      <div style={{ margin: '15px 0' }}>\r\n        <label htmlFor=\"sector-select\">Select a sector: </label>\r\n        <select\r\n          id=\"sector-select\"\r\n          value={sector}\r\n          onChange={e => setSector(e.target.value)}\r\n          style={{ padding: '5px' }}\r\n        >\r\n          {sectors.map(s => (\r\n            <option key={s} value={s}>{s}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {loading && <p>Loading tips...</p>}\r\n      {error   && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {!loading && !error && (\r\n        <ul className=\"tips-list\">\r\n          {tips.map((tip, idx) => (\r\n            <li key={idx}>\r\n              <strong>{tip.title}</strong>\r\n              {tip.description && (\r\n                <span>: {tip.description}</span>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CareerTips;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}